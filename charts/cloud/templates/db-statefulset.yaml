{{- if not .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  db
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app:  db
  template:
    metadata:
      labels:
        app:  db
    spec:
      containers:
      - name:  db
        image: "{{ .Values.image.db.repository }}:{{ .Values.image.db.tag }}"
        imagePullPolicy: {{ .Values.image.db.pullPolicy }}
        ports:
        - containerPort: 5432
          name:  db
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: database
        - name: DB_DATABASE_ANALYTICS
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: analytics-database
        - name: DB_READ_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: read-user
        - name: DB_WRITE_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: write-user
        - name: DB_READ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: read-password
        - name: DB_WRITE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: write-password
        {{- if .Values.db.extra.envs }}
        {{- toYaml .Values.db.extra.envs | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: pg-data
          mountPath: /bitnami/postgresql/data
        - name: db-initialize
          mountPath: /docker-entrypoint-initdb.d
        {{- if .Values.db.resources}}
        resources: {{- toYaml .Values.db.resources | nindent 10 }}
        {{- end }}
      volumes:
        - name: db-initialize
          configMap:
            name: postgres-init-script-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.db.volume }}
      {{- if .Values.db.storageClassName }}
      storageClassName: {{ .Values.db.storageClassName }}
      {{- end }}
{{- end }}
