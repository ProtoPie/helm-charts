apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: enterprise-cloud-api
  labels:
    {{- include "protopie.labels" . | nindent 4 }}
spec:
  serviceName: ent-cloud-api-svc
  replicas: {{ .Values.cloud.api.replicas }}
  selector:
    matchLabels:
      app: ent-cloud-api
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: ent-cloud-api
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- .Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- else if .Values.imageCredentials }}
      imagePullSecrets:
      - name: protopie-private-registry
      {{- end }}
      containers:
        - name: ent-cloud-api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.cloud.api.repository }}:{{ .Values.image.cloud.api.tag }}"
          imagePullPolicy: {{ .Values.image.cloud.api.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: port
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: database
            - name: DB_READ_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: read-user
            - name: DB_WRITE_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: write-user
            - name: DB_READ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: read-password
            - name: DB_WRITE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: write-password
            {{- with .Values.cloud.envs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 3333
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: upload
              mountPath: /app/upload
            - name: download
              mountPath: /app/download
            - name: default
              mountPath: /app/default
            - name: config
              mountPath: /app/resources
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.cloud.volumes.usePVC }}
        - name: logs
          persistentVolumeClaim:
            claimName: logs-enterprise-cloud-api
        - name: download
          persistentVolumeClaim:
            claimName: download-enterprise-cloud-api
        - name: default
          persistentVolumeClaim:
            claimName: default-enterprise-cloud-api
        {{- else }}
        - name: logs
          hostPath:
            path: /home/ec2-user/logs
            type: DirectoryOrCreate
        - name: download
          hostPath:
            path: /home/ec2-user/download
            type: DirectoryOrCreate
        - name: default
          hostPath:
            path: /home/ec2-user/default
            type: DirectoryOrCreate
        {{- end }}
        - name: config
          projected:
            sources:
              - configMap:
                  name: config
              - configMap:
                  name: license
        - name: upload
          persistentVolumeClaim:
            claimName: upload-enterprise-cloud-api

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: ent-cloud-api
  name: upload-enterprise-cloud-api
spec:
  accessModes:
  - {{ .Values.cloud.volumes.accessMode | default "ReadWriteMany" | quote }}
  resources:
    requests:
      storage: {{ .Values.cloud.volumes.upload }}
  {{- with .Values.cloud.volumes.storageClassName }}
  storageClassName: {{ . }}
  {{- end }}

---

{{- if .Values.cloud.volumes.usePVC }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: ent-cloud-api
  name: logs-enterprise-cloud-api
spec:
  accessModes:
    - {{ .Values.cloud.volumes.accessMode | default "ReadWriteMany" | quote }}
  resources:
    requests:
      storage: {{ .Values.cloud.volumes.logs | default "1Gi" }}
  {{- if .Values.cloud.volumes.storageClassName }}
  storageClassName: {{ .Values.cloud.volumes.storageClassName }}
  {{- end }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: ent-cloud-api
  name: download-enterprise-cloud-api
spec:
  accessModes:
    - {{ .Values.cloud.volumes.accessMode | default "ReadWriteMany" | quote }}
  resources:
    requests:
      storage: {{ .Values.cloud.volumes.download | default "1Gi" }}
  {{- if .Values.cloud.volumes.storageClassName }}
  storageClassName: {{ .Values.cloud.volumes.storageClassName }}
  {{- end }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: ent-cloud-api
  name: default-enterprise-cloud-api
spec:
  accessModes:
    - {{ .Values.cloud.volumes.accessMode | default "ReadWriteMany" | quote }}
  resources:
    requests:
      storage: {{ .Values.cloud.volumes.default | default "1Gi" }}
  {{- if .Values.cloud.volumes.storageClassName }}
  storageClassName: {{ .Values.cloud.volumes.storageClassName }}
  {{- end }}
{{- end }}
